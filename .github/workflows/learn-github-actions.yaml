name: learn-github-actions
on: push

env:
  DAY_OF_WEEK: Monday
  GENERATE_NUM: ${{ false }}

jobs:
  check-bats-version:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm install -g bats
      - run: bats -v
  list-dir:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
  setup-go:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v3.0.0
        with:
          # The Go version to download (if necessary) and use. Supports semver spec and ranges.
          go-version: 1.17
          # Set this option to true if you want the action to always check for the latest available version that satisfies the version spec
          check-latest: true
      - run: go version

  randomly-failing-job:
    if: ${{ github.ref != 'refs/heads/master'}}
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        uses: actions/checkout@v2
      - name: Generate 0 or 1
        id: generate_number
        run:  echo "::set-output name=random_number::$(($RANDOM % 2))"
      - name: Pass or fail
        run: |
          if [[ ${{ steps.generate_number.outputs.random_number }} == 0 ]]; then exit 0; else exit 1; fi
  
  test-matrix:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node: [14, 16]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Fake Install dependencies
        run: pwd && ls -lah
      - run: env

  env_job:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    env:
      Greeting: Hello
    steps:
      - name: "Say Hello Mona it's Monday"
        if: ${{ env.DAY_OF_WEEK == 'Monday' }}
        run: echo "$Greeting $First_Name. Today is $DAY_OF_WEEK!"
        env:
          First_Name: Mona
      - name: "Say it again!"
        run: echo "$Greeting $First_Name. Today is $DAY_OF_WEEK!"
      - name: "Print some default env"
        run: echo "Triggered by branch $GITHUB_REF"

# Using-cache job is just example. Its ok not to run it
  using-cache:      
    if: ${{ env.GENERATE_NUM }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache Primes
      id: cache-primes
      uses: actions/cache@v3
      with:
        path: prime-numbers
        key: ${{ runner.os }}-primes
    - name: Generate Prime Numbers
      if: steps.cache-primes.outputs.cache-hit != 'true'
      run: /generate-primes.sh -d prime-numbers
    - name: Use Prime Numbers
      run: /primes.sh -d prime-numbers